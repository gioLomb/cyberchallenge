from Crypto.Cipher import DES
from Crypto.Util.Padding import pad
from pwn import *
res=''
# Simulate the password generation logic
def generate_password(word):
    key = b"\x00" * 8
    cipher = DES.new(key, DES.MODE_ECB)
    padded = pad(word.encode(), 8)
    encrypted = cipher.encrypt(padded)
    return encrypted.hex()[:12]

# Load wordlist
with open("/home/kali/Desktop/cc/files/crypto/j/SecPwdGen/wordlist.txt", "r") as f:
    words = [line.strip() for line in f]

# Try each word and generate its password
password_map = {generate_password(word): word for word in words}

# Print all to check or manually look for the one used by 'admin'
for psw_hex, word in password_map.items():
    print(f"TENTO CON: {psw_hex} => {word}")
    p=remote('spg.challs.cyberchallenge.it', 9600)
    res+=p.recv(1024).decode()
    print(res)
    p.sendline(b"2")
    p.recvuntil(b"username: ")
    p.sendline(b"admin")
    p.recvuntil(b"password: ")
    p.sendline(psw_hex.encode())
    res+=p.recv(2048).decode()
    if 'CCIT' in res:
        print(res.split('CCIT')[1])
        break

